{"version":3,"sources":["SpreadsheetClient.js","App.js","index.js"],"names":["SpreadsheetClient","wsUri","Object","classCallCheck","this","onConnected","bind","onDisconnected","beforeRequest","afterResponse","onError","listener","wsClient","createWebSocketClient","registeredListeners","registeredChangeListeners","request","onOk","sendRequest","response","isReady","push","i","length","splice","actionName","changeListener","hasOwnProperty","changeListeners","console","log","forEach","l","txId","resp","changes","actions","act","k","listeners","Array","isArray","j","msg","sheetName","chartSettings","callback","send","addChart","chart","addSheet","tableName","addTable","table","name","textName","textFormula","text","content","Values","formula","toObject","addText","query","template","automateTable","automaton","queryAutomaton","pivot","auto","pivotAutomaton","rowIndex","columnIndex","value","set","setCellValue","formulaString","setCellFormula","refresh","refreshCellValue","chartType","left","top","right","bottom","cc","type","chartConsult","nColumns","erase","eraseColumns","nRows","eraseRows","firstColumn","lastColumn","fill","fillUp","firstRow","lastRow","fillRight","fillDown","fillLeft","insert","insertColumns","insertRows","targetIndex","move","moveSheet","assetName","remove","removeAsset","removeColumns","removeRows","removeSheet","oldAssetName","newAssetName","rename","renameAsset","oldSheetName","newSheetName","renameSheet","update","updateChart","pathname","createWorkbook","openWorkbook","saveWorkbook","closeWorkbook","layout","layoutAsset","textValue","updateText","userParams","execQuery","params","executeQuery","websocket","timer","isOpen","_txId","msgCallbacks","WebSocket","onopen","evt","setInterval","ping","onOpen","onclose","clearInterval","onClose","onmessage","onMessage","onerror","JSON","parse","data","key","msgCallback","action","Error","req","stringify","errorCode","orientationOrdinal","placementOrdinal","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","presentation","service","setEditMode","assertThisInitialized","setPresentationMode","openWorkbookAfterServiceReady","_this2","setTimeout","_this3","Action","WorkbookOperation","statusCode","setState","workbook","Workbook","deserialize","react_default","a","createElement","className","href","onClick","renderContent","lib","Component","defaultProps","window","location","host","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a16ca3f4.chunk.js","sourcesContent":["import { Values } from '@littleorca/ferris-wheel';\n\nexport default class SpreadsheetClient {\n\n    /**\n     * Protobuf client via websocket.\n     * @param {string} wsUri \n     */\n    constructor(wsUri) {\n\n        this.onConnected = this.onConnected.bind(this);\n        this.onDisconnected = this.onDisconnected.bind(this);\n        this.beforeRequest = this.beforeRequest.bind(this);\n        this.afterResponse = this.afterResponse.bind(this);\n        this.onError = this.onError.bind(this);\n\n        this.listener = {\n            onConnected: this.onConnected,\n            onDisconnected: this.onDisconnected,\n            beforeRequest: this.beforeRequest,\n            afterResponse: this.afterResponse,\n            onError: this.onError,\n        };\n\n        this.wsClient = this.createWebSocketClient(wsUri, this.listener);\n        this.registeredListeners = [];\n        this.registeredChangeListeners = {};\n    }\n\n    /**\n     * Implements Service interface.\n     *\n     * type OkCallback = (resp: EditResponse) => void;\n     * type ErrorCallback = () => void;\n     *\n     * interface Service {\n     * call: (\n     *    request: EditRequest,\n     *    onOk: OkCallback,\n     *    onError: ErrorCallback\n     * ) => void;\n     * }\n     */\n    call(request, onOk, onError) {\n        this.wsClient.sendRequest(request, (response) => {\n            onOk(response);\n        });\n    }\n\n    isBusy() {\n        return !this.isReady;\n    }\n\n    isReady() {\n        return this.wsClient.isReady();\n    }\n\n    static errorName(errorCode) {\n        const errors = [\n            \"#OK!\",\n            \"#UNKNOWN!\",\n            \"#REF!\",\n            \"#VALUE!\",\n            \"#DIV/0!\"\n        ];\n        return errors[errorCode];\n    }\n\n    static orientationName(orientationOrdinal) {\n        const o = [\n            'UNSET',\n            'HORIZONTAL',\n            'VERTICAL'\n        ];\n        return o[orientationOrdinal];\n    }\n\n    static placementName(placementOrdinal) {\n        const p = [\n            'UNSET',\n            'LEFT',\n            'TOP',\n            'RIGHT',\n            'BOTTOM',\n            'CENTER',\n        ];\n        return p[placementOrdinal];\n    }\n\n    /**\n     * Listener\n     */\n\n    addListener(listener) {\n        this.registeredListeners.push(listener);\n    }\n\n    removeListener(listener) {\n        for (let i = 0; i < this.registeredListeners.length; i++) {\n            if (this.registeredListeners[i] === listener) {\n                this.registeredListeners.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    clearListeners() {\n        this.registeredListeners = [];\n    }\n\n    addChangeListener(actionName, changeListener) {\n        if (!this.registeredChangeListeners.hasOwnProperty(actionName)) {\n            this.registeredChangeListeners[actionName] = [];\n        }\n        this.registeredChangeListeners[actionName].push(changeListener);\n    }\n\n    removeChangeListener(actionName, changeListener) {\n        if (!this.registeredChangeListeners.hasOwnProperty(actionName)) {\n            return;\n        }\n        const changeListeners = this.registeredChangeListeners[actionName];\n        for (let i = 0; i < changeListeners.length; i++) {\n            if (changeListeners[i] === changeListener) {\n                changeListeners.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    clearChangeListeners() {\n        this.registeredChangeListeners = {};\n    }\n\n    onConnected() {\n        console.log('listener: onConnected');\n        this.registeredListeners.forEach(l => l.onConnected());\n    }\n\n    onDisconnected() {\n        console.log('listener: onDisconnected');\n        this.registeredListeners.forEach(l => l.onDisconnected());\n    }\n\n    beforeRequest(txId) {\n        // console.log('listener: beforeRequest', txId);\n        this.registeredListeners.forEach(l => l.beforeRequest(txId));\n    }\n\n    afterResponse(resp) {\n        // console.log('listener: afterResponse', resp);\n        this.registeredListeners.forEach(l => l.afterResponse(resp));\n        // distribute changes if any\n        if (resp.hasOwnProperty('changes')) {\n            for (let i = 0; i < resp.changes.actions.length; i++) {\n                const act = resp.changes.actions[i];\n                for (let k in act) {\n                    if (!act.hasOwnProperty(k)) {\n                        continue;\n                    }\n                    const listeners = this.registeredChangeListeners[k];\n                    if (typeof listeners !== 'undefined' && Array.isArray(listeners)) {\n                        for (let j = 0; j < listeners.length; j++) {\n                            listeners[j](act[k]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onError(msg) {\n        console.log('listener: onError', msg);\n        this.registeredListeners.forEach(l => { l.onError(msg) });\n    }\n\n    /**\n     * \n     * @param {string} sheetName \n     * @param {*} chart\n     * chart: {\n     *   name: string,\n     *   type: string,\n     *   title: UnionValue,\n     *   categories: UnionValue,\n     *   series:[{\n     *     name: UnionValue,\n     *     xValues: UnionValue,\n     *     yValues: UnionValue,\n     *   }],\n     *   xAxis: {},\n     *   yAxis: {},\n     *   zAxis: {}\n     * }\n     */\n    addChart(sheetName, chartSettings, callback) {\n        // var c = this.createChartBySettings(chartSettings);\n        this.wsClient.send({\n            addChart: {\n                sheetName: sheetName,\n                chart: chartSettings,\n            }\n        }, callback);\n    }\n\n    addSheet(sheetName, callback) {\n        this.wsClient.send({\n            addSheet: {\n                sheetName: sheetName,\n            }\n        }, callback);\n    }\n\n    addTable(sheetName, tableName, callback) {\n        this.wsClient.send({\n            addTable: {\n                sheetName: sheetName,\n                table: {\n                    name: tableName,\n                }\n            }\n        }, callback);\n    }\n\n    addText(sheetName, textName, textFormula, callback) {\n        var text = {\n            name: textName,\n        }\n        if (textFormula) {\n            text.content = Values.formula(textFormula).toObject();\n        }\n        this.wsClient.send({\n            addText: {\n                sheetName: sheetName,\n                text: text,\n            }\n        }, callback);\n    }\n\n    /**\n     * \n     * @param {string} sheetName \n     * @param {string} tableName \n     * @param {*} query\n     * {\n     *     schema: schema,\n     *     builtinParams: {\n     *         p1: {\n     *             formulaString: formulaString\n     *             // decimalValue: '111', etc\n     *         }\n     *     },\n     *     userParamRules: {\n     *         p2: {\n     *             allowedTypes: [types...],\n     *             nullable: true/false,\n     *             allowedValues: [values...]\n     *         }\n     *     }\n     * }\n     */\n    automateTableByQuery(sheetName, tableName, query, callback) {\n\n        const template = query;\n\n        this.wsClient.send({\n            automateTable: {\n                sheetName: sheetName,\n                tableName: tableName,\n                automaton: {\n                    queryAutomaton: {\n                        template: template,\n                    },\n                },\n            }\n        }, callback);\n    }\n\n    /**\n     * {\n     *     data: UnionValue,\n     *     filters: [TBD...],\n     *     rows: [string...],\n     *     columns: [string...],\n     *     values: [{\n     *         field: ,\n     *         aggregateType: ,\n     *         label: ,\n     *     }]\n     * }\n     * \n     * @param {string} sheetName \n     * @param {string} tableName \n     * @param {*} pivot \n     */\n    automateTableByPivot(sheetName, tableName, pivot, callback) {\n        // TODO not implemented yet.\n        var auto = {\n            sheetName: sheetName,\n            tableName: tableName,\n            automaton: {\n                pivotAutomaton: pivot,\n            },\n        }\n        this.wsClient.send({\n            automateTable: auto\n        }, callback);\n    }\n\n    setCellValue(sheetName, tableName, rowIndex, columnIndex, value, callback) {\n        var set = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            columnIndex: columnIndex,\n            value: value\n        }\n        this.wsClient.send({\n            setCellValue: set\n        }, callback);\n    }\n\n    setCellFormula(sheetName, tableName, rowIndex, columnIndex, formulaString, callback) {\n        var set = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            columnIndex: columnIndex,\n            formulaString: formulaString,\n        }\n        this.wsClient.send({\n            setCellFormula: set\n        }, callback);\n    }\n\n    /**\n     * Should not be really used since RefreshCellValue is an internal event other than user operation.\n     * @param {string} sheetName \n     * @param {string} tableName \n     * @param {number} rowIndex \n     * @param {number} columnIndex \n     * @param {*} value \n     */\n    refreshCellValue(sheetName, tableName, rowIndex, columnIndex, value, callback) {\n        var refresh = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            columnIndex: columnIndex,\n            value: value\n        }\n        this.wsClient.send({\n            refreshCellValue: refresh\n        }, callback);\n    }\n\n    chartConsult(sheetName, tableName, chartType, left, top, right, bottom, callback) {\n        var cc = {\n            sheetName: sheetName,\n            tableName: tableName,\n            type: chartType,\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom,\n        }\n        this.wsClient.send({\n            chartConsult: cc\n        }, callback);\n    }\n\n    eraseColumns(sheetName, tableName, columnIndex, nColumns, callback) {\n        var erase = {\n            sheetName: sheetName,\n            tableName: tableName,\n            columnIndex: columnIndex,\n            nColumns: nColumns,\n        }\n        this.wsClient.send({\n            eraseColumns: erase\n        }, callback);\n    }\n\n    eraseRows(sheetName, tableName, rowIndex, nRows, callback) {\n        var erase = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            nRows: nRows,\n        }\n        this.wsClient.send({\n            eraseRows: erase\n        }, callback);\n    }\n\n    fillUp(sheetName, tableName, rowIndex, firstColumn, lastColumn, nRows, callback) {\n        var fill = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            firstColumn: firstColumn,\n            lastColumn: lastColumn,\n            nRows: nRows,\n        }\n        this.wsClient.send({\n            fillUp: fill\n        }, callback);\n    }\n\n    fillRight(sheetName, tableName, columnIndex, firstRow, lastRow, nColumns, callback) {\n        var fill = {\n            sheetName: sheetName,\n            tableName: tableName,\n            columnIndex: columnIndex,\n            firstRow: firstRow,\n            lastRow: lastRow,\n            nColumns: nColumns,\n        }\n        this.wsClient.send({\n            fillRight: fill\n        }, callback);\n    }\n\n    fillDown(sheetName, tableName, rowIndex, firstColumn, lastColumn, nRows, callback) {\n        var fill = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            firstColumn: firstColumn,\n            lastColumn: lastColumn,\n            nRows: nRows,\n        }\n        this.wsClient.send({\n            fillDown: fill\n        }, callback);\n    }\n\n    fillLeft(sheetName, tableName, columnIndex, firstRow, lastRow, nColumns, callback) {\n        var fill = {\n            sheetName: sheetName,\n            tableName: tableName,\n            columnIndex: columnIndex,\n            firstRow: firstRow,\n            lastRow: lastRow,\n            nColumns: nColumns,\n        }\n        this.wsClient.send({\n            fillLeft: fill\n        }, callback);\n    }\n\n    insertColumns(sheetName, tableName, columnIndex, nColumns, callback) {\n        var insert = {\n            sheetName: sheetName,\n            tableName: tableName,\n            columnIndex: columnIndex,\n            nColumns: nColumns,\n        }\n        this.wsClient.send({ insertColumns: insert }, callback);\n    }\n\n    insertRows(sheetName, tableName, rowIndex, nRows, callback) {\n        var insert = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            nRows: nRows,\n        }\n        this.wsClient.send({ insertRows: insert }, callback);\n    }\n\n    moveSheet(sheetName, targetIndex, callback) {\n        var move = {\n            sheetName: sheetName,\n            targetIndex: targetIndex,\n        }\n        this.wsClient.send({ moveSheet: move }, callback);\n    }\n\n    removeAsset(sheetName, assetName, callback) {\n        var remove = {\n            sheetName: sheetName,\n            assetName: assetName,\n        }\n        this.wsClient.send({ removeAsset: remove }, callback);\n    }\n\n    removeColumns(sheetName, tableName, columnIndex, nColumns, callback) {\n        var remove = {\n            sheetName: sheetName,\n            tableName: tableName,\n            columnIndex: columnIndex,\n            nColumns: nColumns,\n        }\n        this.wsClient.send({ removeColumns: remove }, callback)\n    }\n\n    removeRows(sheetName, tableName, rowIndex, nRows, callback) {\n        var remove = {\n            sheetName: sheetName,\n            tableName: tableName,\n            rowIndex: rowIndex,\n            nRows: nRows,\n        }\n        this.wsClient.send({ removeRows: remove }, callback);\n    }\n\n    removeSheet(sheetName, callback) {\n        var remove = {\n            sheetName: sheetName,\n        }\n        this.wsClient.send({ removeSheet: remove }, callback);\n    }\n\n    renameAsset(sheetName, oldAssetName, newAssetName, callback) {\n        var rename = {\n            sheetName: sheetName,\n            oldAssetName: oldAssetName,\n            newAssetName: newAssetName,\n        }\n        this.wsClient.send({ renameAsset: rename }, callback);\n    }\n\n    renameSheet(oldSheetName, newSheetName, callback) {\n        var rename = {\n            oldSheetName: oldSheetName,\n            newSheetName: newSheetName,\n        }\n        this.wsClient.send({ renameSheet: rename }, callback);\n    }\n\n    updateAutomaton(callback) {\n        // TODO\n        var action = {};\n        this.wsClient.send(action, callback);\n    }\n\n    updateChart(sheetName, chartSettings, callback) {\n        // var c = this.createChartBySettings(chartSettings);\n        var update = {\n            sheetName: sheetName,\n            chart: chartSettings,\n        }\n        this.wsClient.send({ updateChart: update }, callback);\n    }\n\n    createWorkbook(pathname, callback) {\n        var createWorkbook = {\n            pathname: pathname,\n        }\n        this.wsClient.send({ createWorkbook: createWorkbook }, callback);\n    }\n\n    openWorkbook(pathname, callback) {\n        var openWorkbook = {\n            pathname: pathname,\n        }\n        this.wsClient.send({ openWorkbook: openWorkbook }, callback);\n    }\n\n    saveWorkbook(callback) {\n        var saveWorkbook = {}\n        this.wsClient.send({ saveWorkbook: saveWorkbook }, callback);\n    }\n\n    closeWorkbook(callback) {\n        var closeWorkbook = {};\n        this.wsClient.send({ closeWorkbook: closeWorkbook }, callback);\n    }\n\n    layoutAsset(sheetName, assetName, layout, callback) {\n        var layoutAsset = {\n            sheetName: sheetName,\n            assetName: assetName,\n            layout: layout,\n        }\n        this.wsClient.send({ layoutAsset: layoutAsset }, callback);\n    }\n\n    updateText(sheetName, textName, textValue, callback) {\n        var text = {\n            name: textName,\n        }\n        if (textValue) {\n            text.content = textValue;\n        }\n        var update = {\n            sheetName: sheetName,\n            text: text,\n        }\n        this.wsClient.send({ updateText: update }, callback);\n    }\n\n    executeQuery(sheetName, tableName, userParams, callback) {\n        let execQuery = {\n            sheetName: sheetName,\n            tableName: tableName,\n            params: userParams,\n        }\n        this.wsClient.send({ executeQuery: execQuery }, callback);\n    }\n\n    /**\n     * Spreadsheet protobuf client.\n     * @param {string} wsUri \n     */\n    createWebSocketClient(wsUri, listener) {\n\n        var _wsUri = wsUri;\n\n        var websocket;\n        var isOpen = false;\n\n        var _txId = 1;\n        var msgCallbacks = {};\n\n        var timer;\n\n        websocket = new WebSocket(_wsUri);\n\n        websocket.onopen = function (evt) {\n            isOpen = true;\n            timer = setInterval(ping, 15000);\n            onOpen(evt);\n        };\n\n        websocket.onclose = function (evt) {\n            isOpen = false;\n            clearInterval(timer);\n            onClose(evt);\n        };\n\n        websocket.onmessage = function (evt) {\n            onMessage(evt)\n        };\n\n        websocket.onerror = function (evt) {\n            onError(evt)\n        };\n\n        var ping = function () {\n            if (isReady()) {\n                msgCallbacks['txid-0'] = function () { };\n                websocket.send('{txId:0}');\n            }\n        }\n\n        var onOpen = function (evt) {\n            console.log(\"Connected.\");\n            if (typeof listener !== 'undefined'\n                && typeof listener.onConnected === 'function') {\n                listener.onConnected();\n            }\n        };\n\n        var onClose = function (evt) {\n            console.log(\"Connection closed.\");\n            if (typeof listener !== 'undefined'\n                && typeof listener.onDisconnected === 'function') {\n                listener.onDisconnected();\n            }\n        };\n\n        var onMessage = function (evt) {\n            var msg = JSON.parse(evt.data);\n            console.log('onMessage', msg);\n            var key = 'txid-' + msg.txId;\n            var msgCallback = msgCallbacks[key];\n            if (typeof msgCallback === 'function') {\n                msgCallback(msg);\n                delete msgCallbacks[key];\n            } else {\n                console.log('WARN: msgCallback not defined!');\n            }\n\n            if (typeof listener !== 'undefined'\n                && typeof listener.afterResponse === 'function') {\n                listener.afterResponse(msg);\n            }\n        };\n\n        var onError = function (evt) {\n            console.log(\"WebSocket error occurred.\");\n            msgCallbacks = {}; // reset callback functions\n            // FIXME there could be some problems.\n            if (typeof listener !== 'undefined'\n                && typeof listener.onError === 'function') {\n                listener.onError('WebSocket error!');\n            }\n        };\n\n        var isReady = function () {\n            return websocket && isOpen;\n        };\n\n        var send = function (action, callback) {\n            if (!isReady()) {\n                throw new Error(\"WebSocket not ready.\");\n            }\n            var txId = _txId++;\n            var req = {\n                txId: txId,\n                action: action\n            }\n\n            if (typeof callback === 'function') {\n                msgCallbacks['txid-' + txId] = callback;\n            }\n\n            if (typeof listener !== 'undefined'\n                && typeof listener.beforeRequest === 'function') {\n                listener.beforeRequest(txId);\n            }\n\n            websocket.send(JSON.stringify(req));\n        };\n\n        var sendRequest = function (request, callback) {\n            if (!isReady()) {\n                throw new Error(\"WebSocket not ready.\");\n            }\n            if (typeof callback === 'function') {\n                msgCallbacks['txid-' + request.txId] = callback;\n            }\n            if (typeof listener !== 'undefined'\n                && typeof listener.beforeRequest === 'function') {\n                listener.beforeRequest(request.txId);\n            }\n            websocket.send(JSON.stringify(request));\n        }\n\n        return {\n            isReady: isReady,\n            send: send,\n            sendRequest: sendRequest,\n        };\n\n    }\n}\n\nexport class PbHelper {\n    static assetType(asset) {\n        for (let k in asset) {\n            if (asset.hasOwnProperty(k)\n                && typeof asset[k] === 'object'\n                && asset[k].hasOwnProperty('name')\n                && typeof asset[k].name === 'string') {\n                return k;\n            }\n        }\n    }\n    static assetName(asset) {\n        for (let k in asset) {\n            if (asset.hasOwnProperty(k)\n                && typeof asset[k] === 'object'\n                && asset[k].hasOwnProperty('name')\n                && typeof asset[k].name === 'string') {\n                return asset[k].name;\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport SpreadsheetClient from './SpreadsheetClient';\nimport {\n  Workbook, WorkbookEditor, WorkbookPresenter, Action, WorkbookOperation\n} from '@littleorca/ferris-wheel';\nimport '@littleorca/ferris-wheel/theme/default/theme.css';\nimport './App.css';\n\nclass App extends Component {\n\n  static defaultProps = {\n    wsUri: 'ws://' + window.location.host + '/wsapi'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      presentation: false,\n    };\n\n\n    this.service = new SpreadsheetClient(this.props.wsUri);\n    this.setEditMode = this.setEditMode.bind(this);\n    this.setPresentationMode = this.setPresentationMode.bind(this);\n  }\n\n  componentDidMount() {\n    this.openWorkbookAfterServiceReady();\n  }\n\n  openWorkbookAfterServiceReady() {\n    if (this.service.isReady()) {\n      this.openWorkbook();\n    } else {\n      setTimeout(() => this.openWorkbookAfterServiceReady(), 100);\n    }\n  }\n\n  openWorkbook() {\n    const action = new Action();\n    action.openWorkbook = new WorkbookOperation();\n    this.service.call({\n      txId: 0,\n      action: action,\n    }, resp => {\n      console.log('open workbook', resp);\n      if (resp.statusCode === 0) {\n        this.setState({\n          workbook: Workbook.deserialize(resp.workbook),\n        });\n      }\n    });\n  }\n\n  setEditMode() {\n    this.setState({ presentation: false });\n  }\n\n  setPresentationMode() {\n    this.setState({ presentation: true });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n\n        <div className=\"header\">\n          <ul>\n            <li className={this.state.presentation ? \"\" : \"selected\"}>\n              <a href=\"javascript:void(0);\" onClick={this.setEditMode}>编辑模式</a>\n            </li>\n            <li className={this.state.presentation ? \"selected\" : \"\"}>\n              <a href=\"javascript:void(0);\" onClick={this.setPresentationMode}>展示模式</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"content\">\n          {this.renderContent()}\n        </div>\n      </div>\n    );\n  }\n\n  renderContent() {\n    const workbook = this.state.workbook;\n    if (typeof workbook !== 'undefined') {\n      return (\n        this.state.presentation ?\n          (\n            <WorkbookPresenter\n              workbook={workbook}\n              service={this.service} />\n          ) : (\n            <WorkbookEditor\n              workbook={workbook}\n              service={this.service} />\n          )\n      );\n\n    } else {\n      return <div className=\"loading\">Loading...</div>;\n    }\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}