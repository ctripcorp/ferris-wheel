// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/ctrip/ferriswheel/proto/workbook.proto

package com.ctrip.ferriswheel.proto.v1;

/**
 * Protobuf type {@code ferriswheel.v1.AxisBand}
 */
public  final class AxisBand extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ferriswheel.v1.AxisBand)
    AxisBandOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AxisBand.newBuilder() to construct.
  private AxisBand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AxisBand() {
    label_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AxisBand(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.ctrip.ferriswheel.proto.v1.Interval.Builder subBuilder = null;
            if (interval_ != null) {
              subBuilder = interval_.toBuilder();
            }
            interval_ = input.readMessage(com.ctrip.ferriswheel.proto.v1.Interval.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(interval_);
              interval_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            label_ = s;
            break;
          }
          case 26: {
            com.ctrip.ferriswheel.proto.v1.Color.Builder subBuilder = null;
            if (color_ != null) {
              subBuilder = color_.toBuilder();
            }
            color_ = input.readMessage(com.ctrip.ferriswheel.proto.v1.Color.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(color_);
              color_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_AxisBand_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_AxisBand_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.ferriswheel.proto.v1.AxisBand.class, com.ctrip.ferriswheel.proto.v1.AxisBand.Builder.class);
  }

  public static final int INTERVAL_FIELD_NUMBER = 1;
  private com.ctrip.ferriswheel.proto.v1.Interval interval_;
  /**
   * <code>.ferriswheel.v1.Interval interval = 1;</code>
   */
  public boolean hasInterval() {
    return interval_ != null;
  }
  /**
   * <code>.ferriswheel.v1.Interval interval = 1;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.Interval getInterval() {
    return interval_ == null ? com.ctrip.ferriswheel.proto.v1.Interval.getDefaultInstance() : interval_;
  }
  /**
   * <code>.ferriswheel.v1.Interval interval = 1;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.IntervalOrBuilder getIntervalOrBuilder() {
    return getInterval();
  }

  public static final int LABEL_FIELD_NUMBER = 2;
  private volatile java.lang.Object label_;
  /**
   * <code>string label = 2;</code>
   */
  public java.lang.String getLabel() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      label_ = s;
      return s;
    }
  }
  /**
   * <code>string label = 2;</code>
   */
  public com.google.protobuf.ByteString
      getLabelBytes() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      label_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLOR_FIELD_NUMBER = 3;
  private com.ctrip.ferriswheel.proto.v1.Color color_;
  /**
   * <code>.ferriswheel.v1.Color color = 3;</code>
   */
  public boolean hasColor() {
    return color_ != null;
  }
  /**
   * <code>.ferriswheel.v1.Color color = 3;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.Color getColor() {
    return color_ == null ? com.ctrip.ferriswheel.proto.v1.Color.getDefaultInstance() : color_;
  }
  /**
   * <code>.ferriswheel.v1.Color color = 3;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.ColorOrBuilder getColorOrBuilder() {
    return getColor();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (interval_ != null) {
      output.writeMessage(1, getInterval());
    }
    if (!getLabelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, label_);
    }
    if (color_ != null) {
      output.writeMessage(3, getColor());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (interval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInterval());
    }
    if (!getLabelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, label_);
    }
    if (color_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getColor());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.ferriswheel.proto.v1.AxisBand)) {
      return super.equals(obj);
    }
    com.ctrip.ferriswheel.proto.v1.AxisBand other = (com.ctrip.ferriswheel.proto.v1.AxisBand) obj;

    boolean result = true;
    result = result && (hasInterval() == other.hasInterval());
    if (hasInterval()) {
      result = result && getInterval()
          .equals(other.getInterval());
    }
    result = result && getLabel()
        .equals(other.getLabel());
    result = result && (hasColor() == other.hasColor());
    if (hasColor()) {
      result = result && getColor()
          .equals(other.getColor());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInterval()) {
      hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getInterval().hashCode();
    }
    hash = (37 * hash) + LABEL_FIELD_NUMBER;
    hash = (53 * hash) + getLabel().hashCode();
    if (hasColor()) {
      hash = (37 * hash) + COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getColor().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.AxisBand parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.ferriswheel.proto.v1.AxisBand prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ferriswheel.v1.AxisBand}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ferriswheel.v1.AxisBand)
      com.ctrip.ferriswheel.proto.v1.AxisBandOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_AxisBand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_AxisBand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.ferriswheel.proto.v1.AxisBand.class, com.ctrip.ferriswheel.proto.v1.AxisBand.Builder.class);
    }

    // Construct using com.ctrip.ferriswheel.proto.v1.AxisBand.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (intervalBuilder_ == null) {
        interval_ = null;
      } else {
        interval_ = null;
        intervalBuilder_ = null;
      }
      label_ = "";

      if (colorBuilder_ == null) {
        color_ = null;
      } else {
        color_ = null;
        colorBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_AxisBand_descriptor;
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.AxisBand getDefaultInstanceForType() {
      return com.ctrip.ferriswheel.proto.v1.AxisBand.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.AxisBand build() {
      com.ctrip.ferriswheel.proto.v1.AxisBand result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.AxisBand buildPartial() {
      com.ctrip.ferriswheel.proto.v1.AxisBand result = new com.ctrip.ferriswheel.proto.v1.AxisBand(this);
      if (intervalBuilder_ == null) {
        result.interval_ = interval_;
      } else {
        result.interval_ = intervalBuilder_.build();
      }
      result.label_ = label_;
      if (colorBuilder_ == null) {
        result.color_ = color_;
      } else {
        result.color_ = colorBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.ferriswheel.proto.v1.AxisBand) {
        return mergeFrom((com.ctrip.ferriswheel.proto.v1.AxisBand)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.ferriswheel.proto.v1.AxisBand other) {
      if (other == com.ctrip.ferriswheel.proto.v1.AxisBand.getDefaultInstance()) return this;
      if (other.hasInterval()) {
        mergeInterval(other.getInterval());
      }
      if (!other.getLabel().isEmpty()) {
        label_ = other.label_;
        onChanged();
      }
      if (other.hasColor()) {
        mergeColor(other.getColor());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.ferriswheel.proto.v1.AxisBand parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.ferriswheel.proto.v1.AxisBand) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.ctrip.ferriswheel.proto.v1.Interval interval_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.Interval, com.ctrip.ferriswheel.proto.v1.Interval.Builder, com.ctrip.ferriswheel.proto.v1.IntervalOrBuilder> intervalBuilder_;
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public boolean hasInterval() {
      return intervalBuilder_ != null || interval_ != null;
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.Interval getInterval() {
      if (intervalBuilder_ == null) {
        return interval_ == null ? com.ctrip.ferriswheel.proto.v1.Interval.getDefaultInstance() : interval_;
      } else {
        return intervalBuilder_.getMessage();
      }
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public Builder setInterval(com.ctrip.ferriswheel.proto.v1.Interval value) {
      if (intervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        interval_ = value;
        onChanged();
      } else {
        intervalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public Builder setInterval(
        com.ctrip.ferriswheel.proto.v1.Interval.Builder builderForValue) {
      if (intervalBuilder_ == null) {
        interval_ = builderForValue.build();
        onChanged();
      } else {
        intervalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public Builder mergeInterval(com.ctrip.ferriswheel.proto.v1.Interval value) {
      if (intervalBuilder_ == null) {
        if (interval_ != null) {
          interval_ =
            com.ctrip.ferriswheel.proto.v1.Interval.newBuilder(interval_).mergeFrom(value).buildPartial();
        } else {
          interval_ = value;
        }
        onChanged();
      } else {
        intervalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public Builder clearInterval() {
      if (intervalBuilder_ == null) {
        interval_ = null;
        onChanged();
      } else {
        interval_ = null;
        intervalBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.Interval.Builder getIntervalBuilder() {
      
      onChanged();
      return getIntervalFieldBuilder().getBuilder();
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.IntervalOrBuilder getIntervalOrBuilder() {
      if (intervalBuilder_ != null) {
        return intervalBuilder_.getMessageOrBuilder();
      } else {
        return interval_ == null ?
            com.ctrip.ferriswheel.proto.v1.Interval.getDefaultInstance() : interval_;
      }
    }
    /**
     * <code>.ferriswheel.v1.Interval interval = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.Interval, com.ctrip.ferriswheel.proto.v1.Interval.Builder, com.ctrip.ferriswheel.proto.v1.IntervalOrBuilder> 
        getIntervalFieldBuilder() {
      if (intervalBuilder_ == null) {
        intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.Interval, com.ctrip.ferriswheel.proto.v1.Interval.Builder, com.ctrip.ferriswheel.proto.v1.IntervalOrBuilder>(
                getInterval(),
                getParentForChildren(),
                isClean());
        interval_ = null;
      }
      return intervalBuilder_;
    }

    private java.lang.Object label_ = "";
    /**
     * <code>string label = 2;</code>
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string label = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string label = 2;</code>
     */
    public Builder setLabel(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      label_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string label = 2;</code>
     */
    public Builder clearLabel() {
      
      label_ = getDefaultInstance().getLabel();
      onChanged();
      return this;
    }
    /**
     * <code>string label = 2;</code>
     */
    public Builder setLabelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      label_ = value;
      onChanged();
      return this;
    }

    private com.ctrip.ferriswheel.proto.v1.Color color_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.Color, com.ctrip.ferriswheel.proto.v1.Color.Builder, com.ctrip.ferriswheel.proto.v1.ColorOrBuilder> colorBuilder_;
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public boolean hasColor() {
      return colorBuilder_ != null || color_ != null;
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.Color getColor() {
      if (colorBuilder_ == null) {
        return color_ == null ? com.ctrip.ferriswheel.proto.v1.Color.getDefaultInstance() : color_;
      } else {
        return colorBuilder_.getMessage();
      }
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public Builder setColor(com.ctrip.ferriswheel.proto.v1.Color value) {
      if (colorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        color_ = value;
        onChanged();
      } else {
        colorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public Builder setColor(
        com.ctrip.ferriswheel.proto.v1.Color.Builder builderForValue) {
      if (colorBuilder_ == null) {
        color_ = builderForValue.build();
        onChanged();
      } else {
        colorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public Builder mergeColor(com.ctrip.ferriswheel.proto.v1.Color value) {
      if (colorBuilder_ == null) {
        if (color_ != null) {
          color_ =
            com.ctrip.ferriswheel.proto.v1.Color.newBuilder(color_).mergeFrom(value).buildPartial();
        } else {
          color_ = value;
        }
        onChanged();
      } else {
        colorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public Builder clearColor() {
      if (colorBuilder_ == null) {
        color_ = null;
        onChanged();
      } else {
        color_ = null;
        colorBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.Color.Builder getColorBuilder() {
      
      onChanged();
      return getColorFieldBuilder().getBuilder();
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.ColorOrBuilder getColorOrBuilder() {
      if (colorBuilder_ != null) {
        return colorBuilder_.getMessageOrBuilder();
      } else {
        return color_ == null ?
            com.ctrip.ferriswheel.proto.v1.Color.getDefaultInstance() : color_;
      }
    }
    /**
     * <code>.ferriswheel.v1.Color color = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.Color, com.ctrip.ferriswheel.proto.v1.Color.Builder, com.ctrip.ferriswheel.proto.v1.ColorOrBuilder> 
        getColorFieldBuilder() {
      if (colorBuilder_ == null) {
        colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.Color, com.ctrip.ferriswheel.proto.v1.Color.Builder, com.ctrip.ferriswheel.proto.v1.ColorOrBuilder>(
                getColor(),
                getParentForChildren(),
                isClean());
        color_ = null;
      }
      return colorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ferriswheel.v1.AxisBand)
  }

  // @@protoc_insertion_point(class_scope:ferriswheel.v1.AxisBand)
  private static final com.ctrip.ferriswheel.proto.v1.AxisBand DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.ferriswheel.proto.v1.AxisBand();
  }

  public static com.ctrip.ferriswheel.proto.v1.AxisBand getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AxisBand>
      PARSER = new com.google.protobuf.AbstractParser<AxisBand>() {
    @java.lang.Override
    public AxisBand parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AxisBand(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AxisBand> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AxisBand> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.ferriswheel.proto.v1.AxisBand getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

