// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/ctrip/ferriswheel/proto/workbook.proto

package com.ctrip.ferriswheel.proto.v1;

/**
 * Protobuf type {@code ferriswheel.v1.PivotAutomaton}
 */
public  final class PivotAutomaton extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ferriswheel.v1.PivotAutomaton)
    PivotAutomatonOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PivotAutomaton.newBuilder() to construct.
  private PivotAutomaton(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PivotAutomaton() {
    filters_ = java.util.Collections.emptyList();
    rows_ = java.util.Collections.emptyList();
    columns_ = java.util.Collections.emptyList();
    values_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PivotAutomaton(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.ctrip.ferriswheel.proto.v1.UnionValue.Builder subBuilder = null;
            if (data_ != null) {
              subBuilder = data_.toBuilder();
            }
            data_ = input.readMessage(com.ctrip.ferriswheel.proto.v1.UnionValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(data_);
              data_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              filters_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotFilter>();
              mutable_bitField0_ |= 0x00000002;
            }
            filters_.add(
                input.readMessage(com.ctrip.ferriswheel.proto.v1.PivotFilter.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              rows_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotField>();
              mutable_bitField0_ |= 0x00000004;
            }
            rows_.add(
                input.readMessage(com.ctrip.ferriswheel.proto.v1.PivotField.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              columns_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotField>();
              mutable_bitField0_ |= 0x00000008;
            }
            columns_.add(
                input.readMessage(com.ctrip.ferriswheel.proto.v1.PivotField.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              values_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotValue>();
              mutable_bitField0_ |= 0x00000010;
            }
            values_.add(
                input.readMessage(com.ctrip.ferriswheel.proto.v1.PivotValue.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        filters_ = java.util.Collections.unmodifiableList(filters_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        rows_ = java.util.Collections.unmodifiableList(rows_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        columns_ = java.util.Collections.unmodifiableList(columns_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        values_ = java.util.Collections.unmodifiableList(values_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_PivotAutomaton_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_PivotAutomaton_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.ferriswheel.proto.v1.PivotAutomaton.class, com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder.class);
  }

  private int bitField0_;
  public static final int DATA_FIELD_NUMBER = 1;
  private com.ctrip.ferriswheel.proto.v1.UnionValue data_;
  /**
   * <code>.ferriswheel.v1.UnionValue data = 1;</code>
   */
  public boolean hasData() {
    return data_ != null;
  }
  /**
   * <code>.ferriswheel.v1.UnionValue data = 1;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.UnionValue getData() {
    return data_ == null ? com.ctrip.ferriswheel.proto.v1.UnionValue.getDefaultInstance() : data_;
  }
  /**
   * <code>.ferriswheel.v1.UnionValue data = 1;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.UnionValueOrBuilder getDataOrBuilder() {
    return getData();
  }

  public static final int FILTERS_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotFilter> filters_;
  /**
   * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
   */
  public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotFilter> getFiltersList() {
    return filters_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
   */
  public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder> 
      getFiltersOrBuilderList() {
    return filters_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
   */
  public int getFiltersCount() {
    return filters_.size();
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotFilter getFilters(int index) {
    return filters_.get(index);
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder getFiltersOrBuilder(
      int index) {
    return filters_.get(index);
  }

  public static final int ROWS_FIELD_NUMBER = 3;
  private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> rows_;
  /**
   * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
   */
  public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> getRowsList() {
    return rows_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
   */
  public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> 
      getRowsOrBuilderList() {
    return rows_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
   */
  public int getRowsCount() {
    return rows_.size();
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotField getRows(int index) {
    return rows_.get(index);
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder getRowsOrBuilder(
      int index) {
    return rows_.get(index);
  }

  public static final int COLUMNS_FIELD_NUMBER = 4;
  private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> columns_;
  /**
   * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
   */
  public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> getColumnsList() {
    return columns_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
   */
  public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> 
      getColumnsOrBuilderList() {
    return columns_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
   */
  public int getColumnsCount() {
    return columns_.size();
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotField getColumns(int index) {
    return columns_.get(index);
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder getColumnsOrBuilder(
      int index) {
    return columns_.get(index);
  }

  public static final int VALUES_FIELD_NUMBER = 5;
  private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotValue> values_;
  /**
   * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
   */
  public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotValue> getValuesList() {
    return values_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
   */
  public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder> 
      getValuesOrBuilderList() {
    return values_;
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
   */
  public int getValuesCount() {
    return values_.size();
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotValue getValues(int index) {
    return values_.get(index);
  }
  /**
   * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder getValuesOrBuilder(
      int index) {
    return values_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (data_ != null) {
      output.writeMessage(1, getData());
    }
    for (int i = 0; i < filters_.size(); i++) {
      output.writeMessage(2, filters_.get(i));
    }
    for (int i = 0; i < rows_.size(); i++) {
      output.writeMessage(3, rows_.get(i));
    }
    for (int i = 0; i < columns_.size(); i++) {
      output.writeMessage(4, columns_.get(i));
    }
    for (int i = 0; i < values_.size(); i++) {
      output.writeMessage(5, values_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (data_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getData());
    }
    for (int i = 0; i < filters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, filters_.get(i));
    }
    for (int i = 0; i < rows_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, rows_.get(i));
    }
    for (int i = 0; i < columns_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, columns_.get(i));
    }
    for (int i = 0; i < values_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, values_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.ferriswheel.proto.v1.PivotAutomaton)) {
      return super.equals(obj);
    }
    com.ctrip.ferriswheel.proto.v1.PivotAutomaton other = (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) obj;

    if (hasData() != other.hasData()) return false;
    if (hasData()) {
      if (!getData()
          .equals(other.getData())) return false;
    }
    if (!getFiltersList()
        .equals(other.getFiltersList())) return false;
    if (!getRowsList()
        .equals(other.getRowsList())) return false;
    if (!getColumnsList()
        .equals(other.getColumnsList())) return false;
    if (!getValuesList()
        .equals(other.getValuesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasData()) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
    }
    if (getFiltersCount() > 0) {
      hash = (37 * hash) + FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getFiltersList().hashCode();
    }
    if (getRowsCount() > 0) {
      hash = (37 * hash) + ROWS_FIELD_NUMBER;
      hash = (53 * hash) + getRowsList().hashCode();
    }
    if (getColumnsCount() > 0) {
      hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getColumnsList().hashCode();
    }
    if (getValuesCount() > 0) {
      hash = (37 * hash) + VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getValuesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.ferriswheel.proto.v1.PivotAutomaton prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ferriswheel.v1.PivotAutomaton}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ferriswheel.v1.PivotAutomaton)
      com.ctrip.ferriswheel.proto.v1.PivotAutomatonOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_PivotAutomaton_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_PivotAutomaton_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.ferriswheel.proto.v1.PivotAutomaton.class, com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder.class);
    }

    // Construct using com.ctrip.ferriswheel.proto.v1.PivotAutomaton.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFiltersFieldBuilder();
        getRowsFieldBuilder();
        getColumnsFieldBuilder();
        getValuesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dataBuilder_ == null) {
        data_ = null;
      } else {
        data_ = null;
        dataBuilder_ = null;
      }
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        filtersBuilder_.clear();
      }
      if (rowsBuilder_ == null) {
        rows_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        rowsBuilder_.clear();
      }
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        columnsBuilder_.clear();
      }
      if (valuesBuilder_ == null) {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        valuesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_PivotAutomaton_descriptor;
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.PivotAutomaton getDefaultInstanceForType() {
      return com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.PivotAutomaton build() {
      com.ctrip.ferriswheel.proto.v1.PivotAutomaton result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.PivotAutomaton buildPartial() {
      com.ctrip.ferriswheel.proto.v1.PivotAutomaton result = new com.ctrip.ferriswheel.proto.v1.PivotAutomaton(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (dataBuilder_ == null) {
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
      if (filtersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.filters_ = filters_;
      } else {
        result.filters_ = filtersBuilder_.build();
      }
      if (rowsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.rows_ = rows_;
      } else {
        result.rows_ = rowsBuilder_.build();
      }
      if (columnsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          columns_ = java.util.Collections.unmodifiableList(columns_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.columns_ = columns_;
      } else {
        result.columns_ = columnsBuilder_.build();
      }
      if (valuesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.values_ = values_;
      } else {
        result.values_ = valuesBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.ferriswheel.proto.v1.PivotAutomaton) {
        return mergeFrom((com.ctrip.ferriswheel.proto.v1.PivotAutomaton)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.ferriswheel.proto.v1.PivotAutomaton other) {
      if (other == com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance()) return this;
      if (other.hasData()) {
        mergeData(other.getData());
      }
      if (filtersBuilder_ == null) {
        if (!other.filters_.isEmpty()) {
          if (filters_.isEmpty()) {
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFiltersIsMutable();
            filters_.addAll(other.filters_);
          }
          onChanged();
        }
      } else {
        if (!other.filters_.isEmpty()) {
          if (filtersBuilder_.isEmpty()) {
            filtersBuilder_.dispose();
            filtersBuilder_ = null;
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000002);
            filtersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFiltersFieldBuilder() : null;
          } else {
            filtersBuilder_.addAllMessages(other.filters_);
          }
        }
      }
      if (rowsBuilder_ == null) {
        if (!other.rows_.isEmpty()) {
          if (rows_.isEmpty()) {
            rows_ = other.rows_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRowsIsMutable();
            rows_.addAll(other.rows_);
          }
          onChanged();
        }
      } else {
        if (!other.rows_.isEmpty()) {
          if (rowsBuilder_.isEmpty()) {
            rowsBuilder_.dispose();
            rowsBuilder_ = null;
            rows_ = other.rows_;
            bitField0_ = (bitField0_ & ~0x00000004);
            rowsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRowsFieldBuilder() : null;
          } else {
            rowsBuilder_.addAllMessages(other.rows_);
          }
        }
      }
      if (columnsBuilder_ == null) {
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
      } else {
        if (!other.columns_.isEmpty()) {
          if (columnsBuilder_.isEmpty()) {
            columnsBuilder_.dispose();
            columnsBuilder_ = null;
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000008);
            columnsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getColumnsFieldBuilder() : null;
          } else {
            columnsBuilder_.addAllMessages(other.columns_);
          }
        }
      }
      if (valuesBuilder_ == null) {
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
      } else {
        if (!other.values_.isEmpty()) {
          if (valuesBuilder_.isEmpty()) {
            valuesBuilder_.dispose();
            valuesBuilder_ = null;
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000010);
            valuesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValuesFieldBuilder() : null;
          } else {
            valuesBuilder_.addAllMessages(other.values_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.ferriswheel.proto.v1.PivotAutomaton parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.ctrip.ferriswheel.proto.v1.UnionValue data_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.UnionValue, com.ctrip.ferriswheel.proto.v1.UnionValue.Builder, com.ctrip.ferriswheel.proto.v1.UnionValueOrBuilder> dataBuilder_;
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public boolean hasData() {
      return dataBuilder_ != null || data_ != null;
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.UnionValue getData() {
      if (dataBuilder_ == null) {
        return data_ == null ? com.ctrip.ferriswheel.proto.v1.UnionValue.getDefaultInstance() : data_;
      } else {
        return dataBuilder_.getMessage();
      }
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public Builder setData(com.ctrip.ferriswheel.proto.v1.UnionValue value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        dataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public Builder setData(
        com.ctrip.ferriswheel.proto.v1.UnionValue.Builder builderForValue) {
      if (dataBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        dataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public Builder mergeData(com.ctrip.ferriswheel.proto.v1.UnionValue value) {
      if (dataBuilder_ == null) {
        if (data_ != null) {
          data_ =
            com.ctrip.ferriswheel.proto.v1.UnionValue.newBuilder(data_).mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        dataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = null;
        onChanged();
      } else {
        data_ = null;
        dataBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.UnionValue.Builder getDataBuilder() {
      
      onChanged();
      return getDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.UnionValueOrBuilder getDataOrBuilder() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilder();
      } else {
        return data_ == null ?
            com.ctrip.ferriswheel.proto.v1.UnionValue.getDefaultInstance() : data_;
      }
    }
    /**
     * <code>.ferriswheel.v1.UnionValue data = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.UnionValue, com.ctrip.ferriswheel.proto.v1.UnionValue.Builder, com.ctrip.ferriswheel.proto.v1.UnionValueOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.UnionValue, com.ctrip.ferriswheel.proto.v1.UnionValue.Builder, com.ctrip.ferriswheel.proto.v1.UnionValueOrBuilder>(
                getData(),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotFilter> filters_ =
      java.util.Collections.emptyList();
    private void ensureFiltersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        filters_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotFilter>(filters_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotFilter, com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder, com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder> filtersBuilder_;

    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotFilter> getFiltersList() {
      if (filtersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filters_);
      } else {
        return filtersBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public int getFiltersCount() {
      if (filtersBuilder_ == null) {
        return filters_.size();
      } else {
        return filtersBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFilter getFilters(int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);
      } else {
        return filtersBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder setFilters(
        int index, com.ctrip.ferriswheel.proto.v1.PivotFilter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.set(index, value);
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder setFilters(
        int index, com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.set(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder addFilters(com.ctrip.ferriswheel.proto.v1.PivotFilter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder addFilters(
        int index, com.ctrip.ferriswheel.proto.v1.PivotFilter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(index, value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder addFilters(
        com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder addFilters(
        int index, com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder addAllFilters(
        java.lang.Iterable<? extends com.ctrip.ferriswheel.proto.v1.PivotFilter> values) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, filters_);
        onChanged();
      } else {
        filtersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder clearFilters() {
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        filtersBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public Builder removeFilters(int index) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.remove(index);
        onChanged();
      } else {
        filtersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder getFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder getFiltersOrBuilder(
        int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);  } else {
        return filtersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder> 
         getFiltersOrBuilderList() {
      if (filtersBuilder_ != null) {
        return filtersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filters_);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder addFiltersBuilder() {
      return getFiltersFieldBuilder().addBuilder(
          com.ctrip.ferriswheel.proto.v1.PivotFilter.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder addFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().addBuilder(
          index, com.ctrip.ferriswheel.proto.v1.PivotFilter.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotFilter filters = 2;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder> 
         getFiltersBuilderList() {
      return getFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotFilter, com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder, com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder> 
        getFiltersFieldBuilder() {
      if (filtersBuilder_ == null) {
        filtersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.PivotFilter, com.ctrip.ferriswheel.proto.v1.PivotFilter.Builder, com.ctrip.ferriswheel.proto.v1.PivotFilterOrBuilder>(
                filters_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        filters_ = null;
      }
      return filtersBuilder_;
    }

    private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> rows_ =
      java.util.Collections.emptyList();
    private void ensureRowsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        rows_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotField>(rows_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotField, com.ctrip.ferriswheel.proto.v1.PivotField.Builder, com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> rowsBuilder_;

    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> getRowsList() {
      if (rowsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rows_);
      } else {
        return rowsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public int getRowsCount() {
      if (rowsBuilder_ == null) {
        return rows_.size();
      } else {
        return rowsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField getRows(int index) {
      if (rowsBuilder_ == null) {
        return rows_.get(index);
      } else {
        return rowsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder setRows(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField value) {
      if (rowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowsIsMutable();
        rows_.set(index, value);
        onChanged();
      } else {
        rowsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder setRows(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField.Builder builderForValue) {
      if (rowsBuilder_ == null) {
        ensureRowsIsMutable();
        rows_.set(index, builderForValue.build());
        onChanged();
      } else {
        rowsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder addRows(com.ctrip.ferriswheel.proto.v1.PivotField value) {
      if (rowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowsIsMutable();
        rows_.add(value);
        onChanged();
      } else {
        rowsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder addRows(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField value) {
      if (rowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowsIsMutable();
        rows_.add(index, value);
        onChanged();
      } else {
        rowsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder addRows(
        com.ctrip.ferriswheel.proto.v1.PivotField.Builder builderForValue) {
      if (rowsBuilder_ == null) {
        ensureRowsIsMutable();
        rows_.add(builderForValue.build());
        onChanged();
      } else {
        rowsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder addRows(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField.Builder builderForValue) {
      if (rowsBuilder_ == null) {
        ensureRowsIsMutable();
        rows_.add(index, builderForValue.build());
        onChanged();
      } else {
        rowsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder addAllRows(
        java.lang.Iterable<? extends com.ctrip.ferriswheel.proto.v1.PivotField> values) {
      if (rowsBuilder_ == null) {
        ensureRowsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rows_);
        onChanged();
      } else {
        rowsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder clearRows() {
      if (rowsBuilder_ == null) {
        rows_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        rowsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public Builder removeRows(int index) {
      if (rowsBuilder_ == null) {
        ensureRowsIsMutable();
        rows_.remove(index);
        onChanged();
      } else {
        rowsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField.Builder getRowsBuilder(
        int index) {
      return getRowsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder getRowsOrBuilder(
        int index) {
      if (rowsBuilder_ == null) {
        return rows_.get(index);  } else {
        return rowsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> 
         getRowsOrBuilderList() {
      if (rowsBuilder_ != null) {
        return rowsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rows_);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField.Builder addRowsBuilder() {
      return getRowsFieldBuilder().addBuilder(
          com.ctrip.ferriswheel.proto.v1.PivotField.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField.Builder addRowsBuilder(
        int index) {
      return getRowsFieldBuilder().addBuilder(
          index, com.ctrip.ferriswheel.proto.v1.PivotField.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField rows = 3;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField.Builder> 
         getRowsBuilderList() {
      return getRowsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotField, com.ctrip.ferriswheel.proto.v1.PivotField.Builder, com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> 
        getRowsFieldBuilder() {
      if (rowsBuilder_ == null) {
        rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.PivotField, com.ctrip.ferriswheel.proto.v1.PivotField.Builder, com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder>(
                rows_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        rows_ = null;
      }
      return rowsBuilder_;
    }

    private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> columns_ =
      java.util.Collections.emptyList();
    private void ensureColumnsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        columns_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotField>(columns_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotField, com.ctrip.ferriswheel.proto.v1.PivotField.Builder, com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> columnsBuilder_;

    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField> getColumnsList() {
      if (columnsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(columns_);
      } else {
        return columnsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public int getColumnsCount() {
      if (columnsBuilder_ == null) {
        return columns_.size();
      } else {
        return columnsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField getColumns(int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);
      } else {
        return columnsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder setColumns(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder setColumns(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.set(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder addColumns(com.ctrip.ferriswheel.proto.v1.PivotField value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder addColumns(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(index, value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder addColumns(
        com.ctrip.ferriswheel.proto.v1.PivotField.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder addColumns(
        int index, com.ctrip.ferriswheel.proto.v1.PivotField.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder addAllColumns(
        java.lang.Iterable<? extends com.ctrip.ferriswheel.proto.v1.PivotField> values) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
      } else {
        columnsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder clearColumns() {
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        columnsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public Builder removeColumns(int index) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.remove(index);
        onChanged();
      } else {
        columnsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField.Builder getColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder getColumnsOrBuilder(
        int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);  } else {
        return columnsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> 
         getColumnsOrBuilderList() {
      if (columnsBuilder_ != null) {
        return columnsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(columns_);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField.Builder addColumnsBuilder() {
      return getColumnsFieldBuilder().addBuilder(
          com.ctrip.ferriswheel.proto.v1.PivotField.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotField.Builder addColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().addBuilder(
          index, com.ctrip.ferriswheel.proto.v1.PivotField.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotField columns = 4;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotField.Builder> 
         getColumnsBuilderList() {
      return getColumnsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotField, com.ctrip.ferriswheel.proto.v1.PivotField.Builder, com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder> 
        getColumnsFieldBuilder() {
      if (columnsBuilder_ == null) {
        columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.PivotField, com.ctrip.ferriswheel.proto.v1.PivotField.Builder, com.ctrip.ferriswheel.proto.v1.PivotFieldOrBuilder>(
                columns_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        columns_ = null;
      }
      return columnsBuilder_;
    }

    private java.util.List<com.ctrip.ferriswheel.proto.v1.PivotValue> values_ =
      java.util.Collections.emptyList();
    private void ensureValuesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        values_ = new java.util.ArrayList<com.ctrip.ferriswheel.proto.v1.PivotValue>(values_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotValue, com.ctrip.ferriswheel.proto.v1.PivotValue.Builder, com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder> valuesBuilder_;

    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotValue> getValuesList() {
      if (valuesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(values_);
      } else {
        return valuesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public int getValuesCount() {
      if (valuesBuilder_ == null) {
        return values_.size();
      } else {
        return valuesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotValue getValues(int index) {
      if (valuesBuilder_ == null) {
        return values_.get(index);
      } else {
        return valuesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder setValues(
        int index, com.ctrip.ferriswheel.proto.v1.PivotValue value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
      } else {
        valuesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder setValues(
        int index, com.ctrip.ferriswheel.proto.v1.PivotValue.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.set(index, builderForValue.build());
        onChanged();
      } else {
        valuesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder addValues(com.ctrip.ferriswheel.proto.v1.PivotValue value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
      } else {
        valuesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder addValues(
        int index, com.ctrip.ferriswheel.proto.v1.PivotValue value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.add(index, value);
        onChanged();
      } else {
        valuesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder addValues(
        com.ctrip.ferriswheel.proto.v1.PivotValue.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.add(builderForValue.build());
        onChanged();
      } else {
        valuesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder addValues(
        int index, com.ctrip.ferriswheel.proto.v1.PivotValue.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.add(index, builderForValue.build());
        onChanged();
      } else {
        valuesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder addAllValues(
        java.lang.Iterable<? extends com.ctrip.ferriswheel.proto.v1.PivotValue> values) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
      } else {
        valuesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder clearValues() {
      if (valuesBuilder_ == null) {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        valuesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public Builder removeValues(int index) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.remove(index);
        onChanged();
      } else {
        valuesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotValue.Builder getValuesBuilder(
        int index) {
      return getValuesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder getValuesOrBuilder(
        int index) {
      if (valuesBuilder_ == null) {
        return values_.get(index);  } else {
        return valuesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public java.util.List<? extends com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder> 
         getValuesOrBuilderList() {
      if (valuesBuilder_ != null) {
        return valuesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(values_);
      }
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotValue.Builder addValuesBuilder() {
      return getValuesFieldBuilder().addBuilder(
          com.ctrip.ferriswheel.proto.v1.PivotValue.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotValue.Builder addValuesBuilder(
        int index) {
      return getValuesFieldBuilder().addBuilder(
          index, com.ctrip.ferriswheel.proto.v1.PivotValue.getDefaultInstance());
    }
    /**
     * <code>repeated .ferriswheel.v1.PivotValue values = 5;</code>
     */
    public java.util.List<com.ctrip.ferriswheel.proto.v1.PivotValue.Builder> 
         getValuesBuilderList() {
      return getValuesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotValue, com.ctrip.ferriswheel.proto.v1.PivotValue.Builder, com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder> 
        getValuesFieldBuilder() {
      if (valuesBuilder_ == null) {
        valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.PivotValue, com.ctrip.ferriswheel.proto.v1.PivotValue.Builder, com.ctrip.ferriswheel.proto.v1.PivotValueOrBuilder>(
                values_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        values_ = null;
      }
      return valuesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ferriswheel.v1.PivotAutomaton)
  }

  // @@protoc_insertion_point(class_scope:ferriswheel.v1.PivotAutomaton)
  private static final com.ctrip.ferriswheel.proto.v1.PivotAutomaton DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.ferriswheel.proto.v1.PivotAutomaton();
  }

  public static com.ctrip.ferriswheel.proto.v1.PivotAutomaton getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PivotAutomaton>
      PARSER = new com.google.protobuf.AbstractParser<PivotAutomaton>() {
    @java.lang.Override
    public PivotAutomaton parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PivotAutomaton(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PivotAutomaton> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PivotAutomaton> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.ferriswheel.proto.v1.PivotAutomaton getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

