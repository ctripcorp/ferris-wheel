// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/ctrip/ferriswheel/proto/workbook.proto

package com.ctrip.ferriswheel.proto.v1;

/**
 * Protobuf type {@code ferriswheel.v1.TableAutomaton}
 */
public  final class TableAutomaton extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ferriswheel.v1.TableAutomaton)
    TableAutomatonOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TableAutomaton.newBuilder() to construct.
  private TableAutomaton(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TableAutomaton() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TableAutomaton(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.ctrip.ferriswheel.proto.v1.QueryAutomaton.Builder subBuilder = null;
            if (automatonCase_ == 1) {
              subBuilder = ((com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_).toBuilder();
            }
            automaton_ =
                input.readMessage(com.ctrip.ferriswheel.proto.v1.QueryAutomaton.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_);
              automaton_ = subBuilder.buildPartial();
            }
            automatonCase_ = 1;
            break;
          }
          case 18: {
            com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder subBuilder = null;
            if (automatonCase_ == 2) {
              subBuilder = ((com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_).toBuilder();
            }
            automaton_ =
                input.readMessage(com.ctrip.ferriswheel.proto.v1.PivotAutomaton.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_);
              automaton_ = subBuilder.buildPartial();
            }
            automatonCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_TableAutomaton_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_TableAutomaton_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.ferriswheel.proto.v1.TableAutomaton.class, com.ctrip.ferriswheel.proto.v1.TableAutomaton.Builder.class);
  }

  private int automatonCase_ = 0;
  private java.lang.Object automaton_;
  public enum AutomatonCase
      implements com.google.protobuf.Internal.EnumLite {
    QUERY_AUTOMATON(1),
    PIVOT_AUTOMATON(2),
    AUTOMATON_NOT_SET(0);
    private final int value;
    private AutomatonCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutomatonCase valueOf(int value) {
      return forNumber(value);
    }

    public static AutomatonCase forNumber(int value) {
      switch (value) {
        case 1: return QUERY_AUTOMATON;
        case 2: return PIVOT_AUTOMATON;
        case 0: return AUTOMATON_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public AutomatonCase
  getAutomatonCase() {
    return AutomatonCase.forNumber(
        automatonCase_);
  }

  public static final int QUERY_AUTOMATON_FIELD_NUMBER = 1;
  /**
   * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
   */
  public boolean hasQueryAutomaton() {
    return automatonCase_ == 1;
  }
  /**
   * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.QueryAutomaton getQueryAutomaton() {
    if (automatonCase_ == 1) {
       return (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_;
    }
    return com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance();
  }
  /**
   * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.QueryAutomatonOrBuilder getQueryAutomatonOrBuilder() {
    if (automatonCase_ == 1) {
       return (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_;
    }
    return com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance();
  }

  public static final int PIVOT_AUTOMATON_FIELD_NUMBER = 2;
  /**
   * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
   */
  public boolean hasPivotAutomaton() {
    return automatonCase_ == 2;
  }
  /**
   * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotAutomaton getPivotAutomaton() {
    if (automatonCase_ == 2) {
       return (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_;
    }
    return com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
  }
  /**
   * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
   */
  public com.ctrip.ferriswheel.proto.v1.PivotAutomatonOrBuilder getPivotAutomatonOrBuilder() {
    if (automatonCase_ == 2) {
       return (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_;
    }
    return com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (automatonCase_ == 1) {
      output.writeMessage(1, (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_);
    }
    if (automatonCase_ == 2) {
      output.writeMessage(2, (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (automatonCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_);
    }
    if (automatonCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.ferriswheel.proto.v1.TableAutomaton)) {
      return super.equals(obj);
    }
    com.ctrip.ferriswheel.proto.v1.TableAutomaton other = (com.ctrip.ferriswheel.proto.v1.TableAutomaton) obj;

    if (!getAutomatonCase().equals(other.getAutomatonCase())) return false;
    switch (automatonCase_) {
      case 1:
        if (!getQueryAutomaton()
            .equals(other.getQueryAutomaton())) return false;
        break;
      case 2:
        if (!getPivotAutomaton()
            .equals(other.getPivotAutomaton())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (automatonCase_) {
      case 1:
        hash = (37 * hash) + QUERY_AUTOMATON_FIELD_NUMBER;
        hash = (53 * hash) + getQueryAutomaton().hashCode();
        break;
      case 2:
        hash = (37 * hash) + PIVOT_AUTOMATON_FIELD_NUMBER;
        hash = (53 * hash) + getPivotAutomaton().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.ferriswheel.proto.v1.TableAutomaton prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ferriswheel.v1.TableAutomaton}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ferriswheel.v1.TableAutomaton)
      com.ctrip.ferriswheel.proto.v1.TableAutomatonOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_TableAutomaton_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_TableAutomaton_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.ferriswheel.proto.v1.TableAutomaton.class, com.ctrip.ferriswheel.proto.v1.TableAutomaton.Builder.class);
    }

    // Construct using com.ctrip.ferriswheel.proto.v1.TableAutomaton.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      automatonCase_ = 0;
      automaton_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.ferriswheel.proto.v1.WorkbookOuterClass.internal_static_ferriswheel_v1_TableAutomaton_descriptor;
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.TableAutomaton getDefaultInstanceForType() {
      return com.ctrip.ferriswheel.proto.v1.TableAutomaton.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.TableAutomaton build() {
      com.ctrip.ferriswheel.proto.v1.TableAutomaton result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.ferriswheel.proto.v1.TableAutomaton buildPartial() {
      com.ctrip.ferriswheel.proto.v1.TableAutomaton result = new com.ctrip.ferriswheel.proto.v1.TableAutomaton(this);
      if (automatonCase_ == 1) {
        if (queryAutomatonBuilder_ == null) {
          result.automaton_ = automaton_;
        } else {
          result.automaton_ = queryAutomatonBuilder_.build();
        }
      }
      if (automatonCase_ == 2) {
        if (pivotAutomatonBuilder_ == null) {
          result.automaton_ = automaton_;
        } else {
          result.automaton_ = pivotAutomatonBuilder_.build();
        }
      }
      result.automatonCase_ = automatonCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.ferriswheel.proto.v1.TableAutomaton) {
        return mergeFrom((com.ctrip.ferriswheel.proto.v1.TableAutomaton)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.ferriswheel.proto.v1.TableAutomaton other) {
      if (other == com.ctrip.ferriswheel.proto.v1.TableAutomaton.getDefaultInstance()) return this;
      switch (other.getAutomatonCase()) {
        case QUERY_AUTOMATON: {
          mergeQueryAutomaton(other.getQueryAutomaton());
          break;
        }
        case PIVOT_AUTOMATON: {
          mergePivotAutomaton(other.getPivotAutomaton());
          break;
        }
        case AUTOMATON_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.ferriswheel.proto.v1.TableAutomaton parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.ferriswheel.proto.v1.TableAutomaton) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int automatonCase_ = 0;
    private java.lang.Object automaton_;
    public AutomatonCase
        getAutomatonCase() {
      return AutomatonCase.forNumber(
          automatonCase_);
    }

    public Builder clearAutomaton() {
      automatonCase_ = 0;
      automaton_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.QueryAutomaton, com.ctrip.ferriswheel.proto.v1.QueryAutomaton.Builder, com.ctrip.ferriswheel.proto.v1.QueryAutomatonOrBuilder> queryAutomatonBuilder_;
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public boolean hasQueryAutomaton() {
      return automatonCase_ == 1;
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.QueryAutomaton getQueryAutomaton() {
      if (queryAutomatonBuilder_ == null) {
        if (automatonCase_ == 1) {
          return (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_;
        }
        return com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance();
      } else {
        if (automatonCase_ == 1) {
          return queryAutomatonBuilder_.getMessage();
        }
        return com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance();
      }
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public Builder setQueryAutomaton(com.ctrip.ferriswheel.proto.v1.QueryAutomaton value) {
      if (queryAutomatonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        automaton_ = value;
        onChanged();
      } else {
        queryAutomatonBuilder_.setMessage(value);
      }
      automatonCase_ = 1;
      return this;
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public Builder setQueryAutomaton(
        com.ctrip.ferriswheel.proto.v1.QueryAutomaton.Builder builderForValue) {
      if (queryAutomatonBuilder_ == null) {
        automaton_ = builderForValue.build();
        onChanged();
      } else {
        queryAutomatonBuilder_.setMessage(builderForValue.build());
      }
      automatonCase_ = 1;
      return this;
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public Builder mergeQueryAutomaton(com.ctrip.ferriswheel.proto.v1.QueryAutomaton value) {
      if (queryAutomatonBuilder_ == null) {
        if (automatonCase_ == 1 &&
            automaton_ != com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance()) {
          automaton_ = com.ctrip.ferriswheel.proto.v1.QueryAutomaton.newBuilder((com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_)
              .mergeFrom(value).buildPartial();
        } else {
          automaton_ = value;
        }
        onChanged();
      } else {
        if (automatonCase_ == 1) {
          queryAutomatonBuilder_.mergeFrom(value);
        }
        queryAutomatonBuilder_.setMessage(value);
      }
      automatonCase_ = 1;
      return this;
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public Builder clearQueryAutomaton() {
      if (queryAutomatonBuilder_ == null) {
        if (automatonCase_ == 1) {
          automatonCase_ = 0;
          automaton_ = null;
          onChanged();
        }
      } else {
        if (automatonCase_ == 1) {
          automatonCase_ = 0;
          automaton_ = null;
        }
        queryAutomatonBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.QueryAutomaton.Builder getQueryAutomatonBuilder() {
      return getQueryAutomatonFieldBuilder().getBuilder();
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.QueryAutomatonOrBuilder getQueryAutomatonOrBuilder() {
      if ((automatonCase_ == 1) && (queryAutomatonBuilder_ != null)) {
        return queryAutomatonBuilder_.getMessageOrBuilder();
      } else {
        if (automatonCase_ == 1) {
          return (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_;
        }
        return com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance();
      }
    }
    /**
     * <code>.ferriswheel.v1.QueryAutomaton query_automaton = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.QueryAutomaton, com.ctrip.ferriswheel.proto.v1.QueryAutomaton.Builder, com.ctrip.ferriswheel.proto.v1.QueryAutomatonOrBuilder> 
        getQueryAutomatonFieldBuilder() {
      if (queryAutomatonBuilder_ == null) {
        if (!(automatonCase_ == 1)) {
          automaton_ = com.ctrip.ferriswheel.proto.v1.QueryAutomaton.getDefaultInstance();
        }
        queryAutomatonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.QueryAutomaton, com.ctrip.ferriswheel.proto.v1.QueryAutomaton.Builder, com.ctrip.ferriswheel.proto.v1.QueryAutomatonOrBuilder>(
                (com.ctrip.ferriswheel.proto.v1.QueryAutomaton) automaton_,
                getParentForChildren(),
                isClean());
        automaton_ = null;
      }
      automatonCase_ = 1;
      onChanged();;
      return queryAutomatonBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotAutomaton, com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder, com.ctrip.ferriswheel.proto.v1.PivotAutomatonOrBuilder> pivotAutomatonBuilder_;
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public boolean hasPivotAutomaton() {
      return automatonCase_ == 2;
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotAutomaton getPivotAutomaton() {
      if (pivotAutomatonBuilder_ == null) {
        if (automatonCase_ == 2) {
          return (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_;
        }
        return com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
      } else {
        if (automatonCase_ == 2) {
          return pivotAutomatonBuilder_.getMessage();
        }
        return com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
      }
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public Builder setPivotAutomaton(com.ctrip.ferriswheel.proto.v1.PivotAutomaton value) {
      if (pivotAutomatonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        automaton_ = value;
        onChanged();
      } else {
        pivotAutomatonBuilder_.setMessage(value);
      }
      automatonCase_ = 2;
      return this;
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public Builder setPivotAutomaton(
        com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder builderForValue) {
      if (pivotAutomatonBuilder_ == null) {
        automaton_ = builderForValue.build();
        onChanged();
      } else {
        pivotAutomatonBuilder_.setMessage(builderForValue.build());
      }
      automatonCase_ = 2;
      return this;
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public Builder mergePivotAutomaton(com.ctrip.ferriswheel.proto.v1.PivotAutomaton value) {
      if (pivotAutomatonBuilder_ == null) {
        if (automatonCase_ == 2 &&
            automaton_ != com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance()) {
          automaton_ = com.ctrip.ferriswheel.proto.v1.PivotAutomaton.newBuilder((com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_)
              .mergeFrom(value).buildPartial();
        } else {
          automaton_ = value;
        }
        onChanged();
      } else {
        if (automatonCase_ == 2) {
          pivotAutomatonBuilder_.mergeFrom(value);
        }
        pivotAutomatonBuilder_.setMessage(value);
      }
      automatonCase_ = 2;
      return this;
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public Builder clearPivotAutomaton() {
      if (pivotAutomatonBuilder_ == null) {
        if (automatonCase_ == 2) {
          automatonCase_ = 0;
          automaton_ = null;
          onChanged();
        }
      } else {
        if (automatonCase_ == 2) {
          automatonCase_ = 0;
          automaton_ = null;
        }
        pivotAutomatonBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder getPivotAutomatonBuilder() {
      return getPivotAutomatonFieldBuilder().getBuilder();
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    public com.ctrip.ferriswheel.proto.v1.PivotAutomatonOrBuilder getPivotAutomatonOrBuilder() {
      if ((automatonCase_ == 2) && (pivotAutomatonBuilder_ != null)) {
        return pivotAutomatonBuilder_.getMessageOrBuilder();
      } else {
        if (automatonCase_ == 2) {
          return (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_;
        }
        return com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
      }
    }
    /**
     * <code>.ferriswheel.v1.PivotAutomaton pivot_automaton = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.ferriswheel.proto.v1.PivotAutomaton, com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder, com.ctrip.ferriswheel.proto.v1.PivotAutomatonOrBuilder> 
        getPivotAutomatonFieldBuilder() {
      if (pivotAutomatonBuilder_ == null) {
        if (!(automatonCase_ == 2)) {
          automaton_ = com.ctrip.ferriswheel.proto.v1.PivotAutomaton.getDefaultInstance();
        }
        pivotAutomatonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.ferriswheel.proto.v1.PivotAutomaton, com.ctrip.ferriswheel.proto.v1.PivotAutomaton.Builder, com.ctrip.ferriswheel.proto.v1.PivotAutomatonOrBuilder>(
                (com.ctrip.ferriswheel.proto.v1.PivotAutomaton) automaton_,
                getParentForChildren(),
                isClean());
        automaton_ = null;
      }
      automatonCase_ = 2;
      onChanged();;
      return pivotAutomatonBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ferriswheel.v1.TableAutomaton)
  }

  // @@protoc_insertion_point(class_scope:ferriswheel.v1.TableAutomaton)
  private static final com.ctrip.ferriswheel.proto.v1.TableAutomaton DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.ferriswheel.proto.v1.TableAutomaton();
  }

  public static com.ctrip.ferriswheel.proto.v1.TableAutomaton getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TableAutomaton>
      PARSER = new com.google.protobuf.AbstractParser<TableAutomaton>() {
    @java.lang.Override
    public TableAutomaton parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TableAutomaton(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TableAutomaton> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TableAutomaton> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.ferriswheel.proto.v1.TableAutomaton getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

